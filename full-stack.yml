Parameters:
  KeyName:
    Description: Keypair for SSH access to instance.
    Type: AWS::EC2::KeyPair::KeyName
    Default: ww-vpn
  ConfigBucket:
    Description: S3 bucket where the configuration files are located.
    Type: String
    Default: silly.apps.storage
  EniId:
    Description: Network interface ID to use.
    Type: String
    Default: eni-375718a4
  ServerConfig:
    Description: S3 URL for OpenVPN server configuration.
    Type: String
    Default: ''
  # VpcId:
  #   Description: VPC ID to use.
  #   Type: String
  #   Default: vpc-fe5f8a9a
Resources:
  VpnSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: OpenVPN connections only.
      # VpcId: !Ref VpcId
      SecurityGroupIngress:
      - IpProtocol: udp
        FromPort: '1194'
        ToPort: '1194'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
  VpnInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: '/'
      Roles:
      - !Ref VpnRole
  VpnConfigS3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: VpnConfigS3Policy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - s3:GetObject*
          - s3:List*
          - s3:PutObject
          Resource: !Sub 'arn:aws:s3:::${ConfigBucket}/ww-vpn/*'
        - Effect: Allow
          Action:
          - ec2:AttachNetworkInterface
          - ec2:DescribeNetworkInterfaces
          - ec2:DetachNetworkInterface
          Resource: '*'
        - Effect: Allow
          Action:
          - ecr:GetDownloadUrlForLayer
          - ecr:BatchGetImage
          - ecr:DescribeImages
          - ecr:GetAuthorizationToken
          - ecr:DescribeRepositories
          - ecr:ListImages
          - ecr:BatchCheckLayerAvailability
          - ecr:GetRepositoryPolicy
          Resource: '*'
      Roles: 
      - !Ref VpnRole
  VpnRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole 
  Machine:
    Type: AWS::EC2::Instance
    Properties:
      SecurityGroups:
        - !Ref VpnSecurityGroup
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref VpnInstanceProfile
      ImageId: ami-cfe4b2b0 # Amazon Linux 2018.03.0
      InstanceType: t2.micro
      UserData: 
        'Fn::Base64': !Sub
          - |
            #!/bin/bash
            yum -y update 
            yum -y install ec2-net-utils docker jq openvpn
            aws configure set region ${Region}
            service docker start
            mkdir /tmp/clients
            
            # Attach ENI
            instance_id=$(wget -q -O - http://169.254.169.254/latest/meta-data/instance-id)
            attachment_id=$(aws ec2 describe-network-interfaces --network-interface-ids ${EniId} | jq -r '.NetworkInterfaces[0].Attachment.AttachmentId')
            aws ec2 detach-network-interface --attachment-id $attachment_id --force
            until aws ec2 attach-network-interface --device-index 1 --instance-id $instance_id --network-interface-id ${EniId}; do
              sleep 5
            done
            ec2ifup eth1

            modprobe iptable_nat
            echo 1 | tee /proc/sys/net/ipv4/ip_forward
            iptables -t nat -A POSTROUTING -s 10.4.0.1/2 -o eth+ -j MASQUERADE
            iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o eth+ -j MASQUERADE
            iptables-save

            # Log in to Docker Registry
            $(aws ecr get-login --no-include-email --region ${Region})
            
            # Run container
            if [ ! -z "${ServerConfig}" ]; then
              aws s3 cp ${ServerConfig} /tmp/server.conf
              MOUNT_CONFIG=" -v /tmp/server.conf:/etc/openvpn/server.conf"
            fi
            docker run -p 1194:1194/udp --device=/dev/net/tun --cap-add=NET_ADMIN -v /tmp/clients:/clients $MOUNT_CONFIG 686155034699.dkr.ecr.us-east-1.amazonaws.com/ww-vpn:latest
            cp /tmp/clients/ww-vpn-server.conf /etc/openvpn/server.conf
            service openvpn start
            
            # Upload generated OVPN Configs to S3.
            until [ -e /tmp/clients/ww-vpn-5.conf ]; do echo "VPN configs not yet available..."; sleep 5; done
            for i in {1..5}; do aws s3 cp /tmp/clients/ww-vpn-$i.conf s3://${ConfigBucket}/ww-vpn/${StackName}/; done
            aws s3 cp /tmp/clients/ww-vpn-server.conf s3://${ConfigBucket}/ww-vpn/${StackName}/;
          - { EniId: !Ref EniId, Region: !Ref 'AWS::Region', StackName: !Ref 'AWS::StackName', ServerConfig: !Ref ServerConfig }