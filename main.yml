- hosts: localhost
  gather_facts: yes
  vars:
    - vpn_region: us-east-1
    - vpn_public_ip: ''
    - vpn_key_name: ww-vpn-2020
    - vpn_instance_type: t2.micro
    - vpn_ami_id: ami-04bf6dcdc9ab498ca
    - vpn_deploy_id: "{{ ansible_date_time.epoch }}"
    - vpn_config_bucket: silly.apps.storage
    - vpn_awslogs_config_template: "{{ lookup('template', 'conf/awslogs.conf') }}"
    - vpn_config_s3_file: ''
    - vpn_server_config_template: "{{ lookup('template', 'conf/openvpn-server.conf') }}"
    - vpn_client_config_template: "{{ lookup('template', 'conf/openvpn-client.conf') }}"

  tasks:
    - name: Create the VPC to hold the resources created within
      amazon.aws.ec2_vpc_net:
        name: wwvpn_vpc
        region: "{{ vpn_region }}"
        cidr_block: 10.10.0.0/16
      register: vpc_result
    
    - name: Create internet gateway for public IP address
      community.aws.ec2_vpc_igw:
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: "{{ vpn_region }}"
      register: igw_result

    - name: Subnet within the VPC
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: "{{ vpn_region }}"
        cidr: "{{ vpc_result.vpc.cidr_block | ansible.netcommon.ipsubnet(20, 0) }}"
      register: subnet_result

    - name: Public route table
      community.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: "{{ vpn_region }}"
        tags:
          Name: WWVPN Public
        subnets:
          - "{{ subnet_result.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw_result.gateway_id }}"
    
    - debug: var=vpn_deploy_id
    # - debug: var=eni_search

    - name: Security Group
      amazon.aws.ec2_group:
        name: OpenVPN-SG
        description: SG with rules for UDP traffic for OpenVPN
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: "{{ vpn_region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: udp
            from_port: 1194
            to_port: 1194
            cidr_ip: 0.0.0.0/0
      register: sg_result
    
    - amazon.aws.ec2_eni:
        name: wwvpn_netinterface
        subnet_id: "{{ subnet_result.subnet.id }}"
        region: "{{ vpn_region }}"
        security_groups:
          - "{{ sg_result.group_id }}"
        # attached: false
      register: eni_result
    
    - name: allocate a new elastic IP inside a VPC
      community.aws.ec2_eip:
        region: "{{ vpn_region }}"
        in_vpc: true
        device_id: "{{ eni_result.interface.id }}"
        public_ip: "{{ vpn_public_ip }}"
      register: eip
    
    - debug: msg="IP address is {{ eip.public_ip }}"
    
    - name: IAM Policy
      iam_policy:
        iam_type: role
        iam_name: VpnRole
        policy_name: IDK
        policy_document: conf/iam-attached-policy.json
        state: present

    - name: IAM Role
      iam_role:
        name: VpnRole
        assume_role_policy_document: "{{ lookup('file', 'conf/iam-trust-policy.json') }}"
        description: "Role to enable ECS/ENI/S3 accesses"

    - name: EC2 Instance
      amazon.aws.ec2:
        region: "{{ vpn_region }}"
        key_name: "{{ vpn_key_name }}"
        # group: OpenVPN-SG
        instance_type: "{{ vpn_instance_type }}"
        image: "{{ vpn_ami_id }}"
        # vpc_subnet_id: "{{ eni_search.network_interfaces.0.subnet_id }}"
        network_interface: "{{ eni_result.interface.id }}"
        instance_profile_name: VpnRole
        user_data: "{{ lookup('template', 'conf/user-data.sh.j2') }}"
        exact_count: 1
        instance_tags:
          Name: "ww-vpn"
        count_tag: 
          Name: "ww-vpn"